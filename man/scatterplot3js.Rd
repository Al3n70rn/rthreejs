% Generated by roxygen2 (4.0.2): do not edit by hand
\name{scatterplot3js}
\alias{scatterplot3js}
\title{scatterplot3js Three.js 3D scatterplot widget.}
\usage{
scatterplot3js(x, y, z, height = NULL, width = NULL, axis = TRUE,
  num.ticks = c(6, 6, 6), color = "steelblue", stroke = "black",
  size = 1, flip.y = TRUE, grid = TRUE, renderer = c("auto", "canvas",
  "webgl", "webgl-buffered"), pch)
}
\arguments{
\item{x}{Either a vector of x-coordinate values or a  three-column
data matrix with three columns corresponding to the x,y,z
coordinate axes. Column labels, if present, are used as axis labels.}

\item{y}{(Optional) vector of y-coordinate values, not required if
\code{x} is a matrix.}

\item{z}{(Optional) vector of z-coordinate values, not required if
\code{x} is a matrix.}

\item{height}{The container div height.}

\item{width}{The container div width.}

\item{num.ticks}{A three-element vector with the suggested number of
ticks to display per axis. Set to NULL to not display ticks. The number
of ticks may be adjusted by the program.}

\item{color}{Either a single hex or named color name, or a vector of
hex or named color names as long as the number of data points to plot.}

\item{stroke}{A single color stroke value (surrounding each point). Set to
null to omit stroke (only available in the CanvasRenderer).}

\item{size}{The plot point radius, either as a single number or a
vector of sizes of length \code{nrow(x)}. A vector of sizes is only
supported by the \code{canvas} renderer. The \code{webgl} renderers accept
a single point size value.}

\item{flip.y}{Reverse the direction of the y-axis (the default value of
TRUE produces plots similar to those rendered by the R
\code{scatterplot3d} package).}

\item{grid}{Set FALSE to disable display of a grid.}

\item{renderer}{Select from available plot rendering techniques of
'auto', 'canvas', 'webgl', or 'webgl-buffered'.}

\item{pch}{An optional data texture image prepared by the \code{texture}
  function used by the WebGL renderer to draw the points (only available
  in the WebGL renderer).}
}
\description{
A 3D scatterplot widget using three.js.
}
\note{
Use the \code{renderer} option to manually select from the available
rendering options.
The \code{canvas} renderer is the fallback rendering option when \code{webgl}
is not available. Select \code{auto} to automatically choose between
the two. The two renderers are slightly different
and have different available options (see above).
The \code{webgl-buffered} renderer is a variation of the \code{webgl}
renderer that uses a buffered geometry for large numbers of points.
It is automatically selected if \code{renderer} is not explicitly
specified and the number of points is greater than 10,000. The
\code{webgl-buffered} renderer can handle up to a million points
or so with reasonable performance on typical desktop graphics cards.
}
\examples{
## dontrun
# A stand-alone example
set.seed(1)
x <- matrix(rnorm(100*3),ncol=3)
scatterplot3js(x, color=heat.colors(100))

# Example 1 from the scatterplot3d package (cf.)
z <- seq(-10, 10, 0.01)
x <- cos(z)
y <- sin(z)
scatterplot3js(x,y,z, rainbow(length(z)))

# A shiny example
library("shiny")
runApp(system.file("examples/scatterplot",package="threejs"))
}
\references{
The three.js project \url{http://threejs.org}.
}
\seealso{
scatterplot3d, rgl
}

