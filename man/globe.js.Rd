% Generated by roxygen2 (4.0.2): do not edit by hand
\name{globe.js}
\alias{globe.js}
\title{globe.js Three.js globe example.}
\usage{
globe.js(img = readJPEG(system.file("images/world.jpg", package = "threejs")),
  lat, long, color = "red", value = 40, height = NULL, width = NULL)
}
\arguments{
\item{img}{Either a matrix or raster image representation or a character string indicating a file path.}

\item{lat}{Data point latitudes (negative values indicate south, positive north).}

\item{long}{Data point longitudes, must be of same length as \code{lat} (negative values indicate west, positive east).}

\item{color}{Either a single color value indicating the color of all data points, or a vector of values of length x.lat indicating color of each point.}

\item{value}{Either a single value indicating the height of all data points, or a vector of values of length x.lat indicating height of each point.}

\item{height}{The container div height.}

\item{width}{The container div width.}

\item{imwidth}{Image width.}

\item{imheight}{Image height.}
}
\description{
Three.js example that maps points onto the earth.
}
\note{
The \code{img} argument may be a relative file location string pointing to
an image file in shiny applications (see the examples below). The \code{img}
argument must be a matrix or raster image representation for non-shiny
file-based use. The shiny method can be *much* faster. This limitation comes
from the way Three.js loads image textures.
}
\examples{
## dontrun
# Stand-alone examples:
library("threejs")

# A shiny example:
runApp(system.file("examples/globe",package="threejs"))
}
\references{
The threejs project \url{http://threejs.org}.
The corresponding javascript file in
\code{ system.file("htmlwidgets/globe.js",package="threejs")}.

Includes ideas and images from the dat.globe Javascript WebGL Globe Toolkit
\url{http://dataarts.github.com/dat.globe},
Copyright 2011 Data Arts Team, Google Creative Lab
Licensed under the Apache License, Version 2.0
\url{http://www.apache.org/licenses/LICENSE-2.0}
}

