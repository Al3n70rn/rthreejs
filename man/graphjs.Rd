% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/graph.R
\name{graphjs}
\alias{graphjs}
\title{Interactive 3D Force-directed Graphs}
\usage{
graphjs(nodes, edges, main = "", curvature = 0, bg = "white",
  fg = "black", showLabels = FALSE, attraction = 1, repulsion = 1,
  max_iterations = 1500, nodeType = c("circle", "sphere"),
  stroke = "black", img, width = NULL, height = NULL)
}
\arguments{
\item{nodes}{A node (vertex) data frame with at least columns:
\itemize{
  \item \code{label} Node character labels
  \item \code{id}    Unique integer node ids (corresponding to edges below)
  \item \code{size}  Positive numeric node plot size
  \item \code{color} A character color value, either color names ("blue", "red", ...) or 3-digit hexadecimal values ("#0000FF", "#EE0011")
}
Each row of the data frame defines a graph node.}

\item{edges}{An edge data frame with at least columns:
\itemize{
  \item \code{from} Integer node id identifying edge 'from' node
  \item \code{to} Integer node id identifying the edge 'to' node
  \item \code{size} Nonnegative numeric edge line width
  \item \code{color} Edge color specified like node color above
}
Each row of the data frame identifies a graph edge.}

\item{main}{Plot title}

\item{curvature}{Zero implies that edges are straight lines. Specify a positive number to curve the edges, useful to distinguish multiple edges in directed graphs. Larger numbers = more curvature, with 1 a usually reasonable value.}

\item{bg}{Plot background color specified similarly to the node colors described above}

\item{fg}{Plot foreground text color}

\item{showLabels}{If TRUE then display text labels near each node, may not work well with nodeType="sphere"}

\item{attraction}{Numeric value specifying attraction of connected nodes to each other, larger values indicate more attraction}

\item{repulsion}{Numeric value specifying repulsion of all nodes to each other, larger values indicate greater repulsion}

\item{max_iterations}{Integer value specifying the maximum number of rendering iterations before stopping}

\item{nodeType}{circle or sphere nodes}

\item{stroke}{Node stroke color, applies only to nodeType="cicrle"}

\item{img}{Optional node image, applies only to nodeType="sphere"--see notes}

\item{width}{optional widget width}

\item{height}{optional widget height}
}
\value{
An htmlwidget object that is displayed using the object's show or print method.
(If you don't see your widget plot, try printing it with the \code{print}) function.
}
\description{
Plot interactive force-directed graphs.
}
\note{
All colors must be specified as color names like "red", "blue", etc. or
as hexadecimal color values without alpha channel, for example "#FF0000", "#0a3e55"
(upper or lower case hex digits are allowed).

The plot responds to the following mouse controls (touch analogs may also be
supported on some systems):
\itemize{
\item  \code{scrollwheel} zoom
\item  \code{left-mouse button + move} rotate
\item  \code{right-mouse button + move} pan
\item  \code{mouse over} identify node by appending its label to the title
}
Press the 'r' key to reset the view.
}
\examples{
data(LeMis)
g <- graphjs(nodes=LeMis$nodes, edges=LeMis$edges, main="Les Mis&eacute;rables")
print(g)
}
\references{
Original code by DAvid Piegza: \url{https://github.com/davidpiegza/Graph-Visualization}.
The three.js project \url{http://threejs.org}.
}

